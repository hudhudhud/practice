module.exports={
    entry:'./main.js',
    output:{
        //把js和图片打包成不同的文件夹
        filename:'bundle.js',
        path: __dirname + "/build",//打包后的文件存放的地方
    },
    module:{
        // css-loader使你能够使用类似@import和url（...）的方法实现require的功能，style-loader将所有的计算后的样式加入页面中，二者组合在一起使你能够把样式表嵌入webpack打包后的js文件中

        // 有一点要注意的是：loader是有顺序的。webpack肯定是先将所有css模块依赖解析完得到计算结果再创建style标签。因此应该把style-loader放在css-loader的前面（webpack loader的执行顺序是从右到左）,顺序不对，会报错。
        rules:[
        //处理css
        {test:/\.css$/,loaders:['style-loader','css-loader']},
        //处理图片 需要同时安装url-loader和file-loader
        //url-loader与file-loader的工作方式相似，如果文件的体积比byte limit小，就能返回Data Url。如果图片比limit小,将直接以base64的形式内联在代码中。如果图片比limit（以bytes为单位）大，那么webpack就会使用file-loader去处理文件，并且所有的查询参数都会传递给file-loader。
        {test:/\.(?:jpg|gif|png)$/,loader:'url-loader?limit=1024&name=images/[name]-[hash:10].[ext]'},

        ]
    },
    plugins:[]
}